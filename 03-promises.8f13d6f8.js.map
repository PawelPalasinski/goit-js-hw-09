{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMMC,EAAOC,SAASC,cAAc,SAE9BC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAASJ,SAASC,cAAc,mBA0BtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEpCJ,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IACpBO,EAAAjB,GAASkB,OAAOC,QACb,uBAAyCC,OAAjB,CAACX,GAAU,QAAYW,OAANV,EAAM,SAGlDG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,IACnBO,EAAAjB,GAASkB,OAAOG,QACb,sBAAoCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,UAG9CA,MArCPR,EAAKoB,iBAAiB,UAItB,SAA8BC,GAE5BA,EAAEC,iBAMF,IAJA,IAAId,EAAQL,EAAaoB,cACnBC,EAAiBpB,EAAYmB,cAC7BE,EAAYpB,EAAOkB,cAEhBG,EAAI,EAAGA,GAAKD,EAAWC,IAC9BpB,EAAcoB,EAAGlB,GACdmB,KAAK,CAAED,EAAAA,EAAGlB,MAAAA,IACVoB,MAAM,CAAEF,EAAAA,EAAGlB,MAAAA,IACdA,GAASgB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n\n// Form and its inputs\n\nconst form = document.querySelector('.form');\n\nconst firstDelayMs = document.querySelector('[name=\"delay\"]');\nconst delayStepMs = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n// Event listener after submitting the form\n\nform.addEventListener('submit', submitCreatePromises);\n\n// Loop to create promises from function createPromise after event listener\n\nfunction submitCreatePromises(e) {\n\n  e.preventDefault();\n\n  let delay = firstDelayMs.valueAsNumber;\n  const delayStepMsVal = delayStepMs.valueAsNumber;\n  const amountVal = amount.valueAsNumber;\n\n  for (let i = 1; i <= amountVal; i++) {\n    createPromise(i, delay)\n      .then({ i, delay })\n      .catch({ i, delay });\n    delay += delayStepMsVal;\n  }\n}\n\n//function createPromise with Notiflix notifications\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${[position]} in ${delay}ms`\n        );\n      } else {\n        reject({ position, delay });\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayMs","$ce04d3a99e08e73b$var$delayStepMs","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","e","preventDefault","valueAsNumber","delayStepMsVal","amountVal","i","then","catch"],"version":3,"file":"03-promises.8f13d6f8.js.map"}